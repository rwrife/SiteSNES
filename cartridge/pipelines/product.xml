<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="view">
  <branch basename="show">
    <segment>
      <node>
        <start-node name="show" secure="false"/>
        <node-display x="0" y="0"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="product-getproduct"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="PRODUCT_NOT_FOUND">
          <transition target-connector="in1" target-path="./b3.1/b2.1/b2.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="2"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="UpdatePageMetaData" pipelet-set-identifier="bc_api">
          <key-binding alias="null" key="Category"/>
          <key-binding alias="null" key="Content"/>
          <key-binding alias="null" key="Folder"/>
          <key-binding alias="Product.shortDescription != null ? Product.shortDescription.getMarkup() : &quot;&quot;" key="DefaultDescription"/>
          <key-binding alias="Product.name" key="DefaultKeywords"/>
          <key-binding alias="Product.name + &quot; - &quot; + dw.system.Site.getCurrent().name" key="DefaultTitle"/>
          <key-binding alias="Product" key="Product"/>
        </pipelet-node>
        <node-display x="0" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="Product.template == null" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <decision-node condition-key="Product.master" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <call-node start-name-ref="product-getmasterproduct"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="PRODUCT_NOT_FOUND">
                      <transition target-connector="in1"/>
                      <segment>
                        <node>
                          <join-node/>
                          <node-display x="2" y="0"/>
                        </node>
                        <simple-transition/>
                        <node>
                          <call-node start-name-ref="_product-postnotfound"/>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition/>
                        <node>
                          <interaction-node transaction-required="false">
                            <template buffered="true" dynamic="false" name="product/notfound"/>
                          </interaction-node>
                          <node-display x="0" y="1"/>
                        </node>
                      </segment>
                    </branch>
                  </node>
                  <transition target-connector="in1" target-path="../+1"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="2" y="0"/>
                <bend-point relative-to="target" x="2" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="2"/>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="_product-postshow"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="product/product"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="_product-postshowdynamic"/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="true" name="Product.template"/>
        </interaction-node>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="getproduct">
    <segment>
      <node>
        <start-node call-mode="private" name="getproduct" secure="false"/>
        <node-display x="3" y="0"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="CurrentHttpParameterMap.pid.stringValue" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="CurrentHttpParameterMap.pid.stringValue" key="From_0"/>
                <key-binding alias="pid" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="_product-pregetproduct"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="GetProduct" pipelet-set-identifier="bc_api">
                <key-binding alias="pid" key="ProductID"/>
                <key-binding alias="Product" key="Product"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="../+1">
                  <transition-display>
                    <bend-point relative-to="source" x="2" y="0"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="product/getproductprice.ds"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="Product" key="Product"/>
                <key-binding alias="PriceStack" key="PriceStack"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="error">
                <transition target-connector="in1" target-path="./+1">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                    <bend-point relative-to="target" x="1" y="0"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="UpdateProductVariationSelections" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentVariationModel" key="ProductVariationModel"/>
                <key-binding alias="null" key="CustomFormPrefix"/>
                <key-binding alias="Product" key="Product"/>
                <key-binding alias="Product" key="SelectedProduct"/>
                <key-binding alias="ProductVariationModels" key="ProductVariationModels"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="UpdateProductOptionSelections" pipelet-set-identifier="bc_api">
                <key-binding alias="Product" key="Product"/>
                <key-binding alias="CurrentOptionModel" key="ProductOptionModel"/>
                <key-binding alias="null" key="CustomFormPrefix"/>
                <key-binding alias="ProductOptionModels" key="ProductOptionModels"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="_product-postgetproduct"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <end-node/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="PRODUCT_NOT_FOUND"/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="getmasterproduct">
    <segment>
      <node>
        <start-node call-mode="private" name="getmasterproduct" secure="false"/>
        <node-display x="7" y="0"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="_product-pregetmasterproduct"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="!Product.master &amp;&amp; Product.variant &amp;&amp; Product.getVariationModel().defaultVariant != null &amp;&amp; Product.getVariationModel().defaultVariant.masterProduct != null" condition-operator="expr">
          <description>Determine if this is a variant.</description>
        </decision-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="GetProduct" pipelet-set-identifier="bc_api">
                <key-binding alias="Product" key="Product"/>
                <key-binding alias="Product.getVariationModel().defaultVariant.masterProduct.ID" key="ProductID"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="2" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <end-node name="PRODUCT_NOT_FOUND"/>
                    <node-display x="1" y="2"/>
                  </node>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
          <bend-point relative-to="target" x="1" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="_product-postgetmasterproduct"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
